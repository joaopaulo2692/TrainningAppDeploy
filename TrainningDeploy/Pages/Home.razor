@page "/"
@using TrainningApp.Core.Constants
@inject NavigationManager Navigation
@* @attribute [Layout(typeof(UserLayout))] *@
@inject IJSRuntime JSRuntime

<PageTitle>Home</PageTitle>

@if(width < 768)
{
    <MudCarousel Class="mud-width-full" Style="height:118px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
        <MudCarouselItem Transition="transition" Color="@Color.Primary">
            <MudImage Src="@image1" Alt="Mony the dog" Elevation="25"  />
        </MudCarouselItem>
        <MudCarouselItem Transition="transition" Color="@Color.Secondary">
            <MudImage Src="@image2" Alt="Mony the dog" Elevation="25" />
        </MudCarouselItem>
        <MudCarouselItem Transition="transition" Color="@Color.Tertiary">
            <MudImage Src="@image3" Alt="Mony the dog" Elevation="25" />
        </MudCarouselItem>
    </MudCarousel>
}
else
{
    <MudCarousel Class="mud-width-full" Style="height:300px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
        <MudCarouselItem Transition="transition" Color="@Color.Primary">
            <MudImage Src="@image1" Alt="Mony the dog" Elevation="25"  />
        </MudCarouselItem>
        <MudCarouselItem Transition="transition" Color="@Color.Secondary">
            <MudImage Src="@image2" Alt="Mony the dog" Elevation="25"  />
        </MudCarouselItem>
        <MudCarouselItem Transition="transition" Color="@Color.Tertiary">
            <MudImage Src="@image3" Alt="Mony the dog" Elevation="25"  />
        </MudCarouselItem>
    </MudCarousel>
}



@* <MudPaper Height="400px" Width="100%">
    <MudText Typo="Typo.h2" Align="Align.Center">Seu novo App de Treinamentos!</MudText>
    <MudText Typo="Typo.h4" Align="Align.Center">Escolha o seu perfil:</MudText>
    <MudContainer MaxWidth="MaxWidth.Small" Style="margin-top: 40px;">

        <MudGrid Justify="Justify.Center">
            <MudItem>
                <MudButton @onclick="@NavigateToStudent" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Large" Class="spacing">Aluno</MudButton>
            </MudItem>
            <MudItem>
                <MudButton @onclick="@NavigateToPersonal" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Large" Class="spacing">Personal</MudButton>
            </MudItem>
        </MudGrid>
    </MudContainer>
</MudPaper> *@
<br/>
<MudPaper Height="100%" Width="100%" Class="responsive-layout">
    <MudContainer MaxWidth="MaxWidth.Large" Class="container-layout">
        <MudGrid Justify="Justify.Center" AlignItems="AlignItems.Center" Spacing="2" Class=" grid-layout">
            <!-- Imagem centralizada -->
            <MudItem xs="12" sm="8" md="6" lg="12">
                <MudImage Src="images/novalogoeditada.png" Elevation="25" Class="image-layout rounded-lg" />
            </MudItem>

            <!-- Botões -->
            <MudItem xs="12" sm="12" md="4" lg="4">
                <MudButton @onclick="@NavigateToCustumers" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Large" Class="button-layout">
                    Alunos
                </MudButton>
            </MudItem>
            <MudItem xs="12" sm="12" md="4" lg="4">
                <MudButton @onclick="@NavigateToPersonals" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Large" Class="button-layout">
                    Personais
                </MudButton>
            </MudItem>
            <MudItem xs="12" sm="12" md="4" lg="4">
                <MudButton @onclick="@NavigateToTrainnings" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Large" Class="button-layout">
                    Treinos
                </MudButton>
            </MudItem>
        </MudGrid>
    </MudContainer>
</MudPaper>






<style>
    /* Aplica o efeito de aumento nos botões quando o mouse passa por cima */
    .spacing:hover {
        transform: scale(1.1); /* Aumenta o tamanho em 10% */
        transition: transform 0.3s ease-in-out; /* Transição suave */
    }

    .spacing {
        transition: transform 0.3s ease-in-out; /* Define uma transição suave para todos os botões */
    }

    .responsive-layout {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        padding: 20px;
    }

    .container-layout {
        text-align: center;
    }

    .grid-layout {
        row-gap: 20px;
    }

    .image-layout {
        max-width: 100%;
        height: auto;
        margin: 0 auto;

    }

    .button-layout {
        margin: 10px;
    }

</style>




@code {
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;
    string url;
    private string image1;
    private string image2;
    private string image3;
    int width = 767;

    private void NavigateToCustumers()
    {
        url = Constants.GetAllCustomer();
        Navigation.NavigateTo(url);
    }
    private void NavigateToTrainnings()
    {
        url = Constants.GetAllTrainning();
        Navigation.NavigateTo(url);
    }

    private void NavigateToPersonals()
    {
        url = Constants.GetAllPersonals();
        Navigation.NavigateTo(url);
    }

    // protected override async Task OnInitializedAsync()
    // {
    //     var width = await JSRuntime.InvokeAsync<int>("blazorGetWindowWidth");
    //     var height = await JSRuntime.InvokeAsync<int>("blazorGetWindowHeight");
    // }

    protected override async Task OnInitializedAsync()
    {
        // Obtém a largura da tela
        width = await JSRuntime.InvokeAsync<int>("blazorGetWindowWidth");

        // Verifica se o dispositivo é um celular (por exemplo, largura menor que 768px)
        if (width < 768)
        {
            // Defina as imagens específicas para celular
            image1 = "images/treino-editcopia.jpg";
            image2 = "images/treino-edit3copia.jpg";
            image3 = "images/treino-edit2copia.jpg";

        }
        else
        {
            // Defina as imagens específicas para desktop
            image1 = "images/treino-edit.jpg";
            image2 = "images/treino-edit3.jpg";
            image3 = "images/treino-edit2.jpg";

        }
    }


}